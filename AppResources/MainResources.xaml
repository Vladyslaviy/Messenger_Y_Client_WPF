<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Messenger_Y_Client_WPF"
                    >
    <Style x:Key="RoundedTextBox" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="10"
                                Padding="5">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
    </Style>
    <Style TargetType="Border" x:Key="RoundedBorderStyle">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="15"/>
    </Style>

    <Storyboard x:Key="ShowErrorMessage">
            <DoubleAnimation Storyboard.TargetName="ErrorMessageBlock"
                             Storyboard.TargetProperty="Opacity"
                             From="0" To="1" Duration="0:0:1"/>
            <DoubleAnimation Storyboard.TargetName="ErrorMessageBlock"
                             Storyboard.TargetProperty="Opacity"
                             From="1" To="1" BeginTime="0:0:1" Duration="0:0:3"/>
            <DoubleAnimation Storyboard.TargetName="ErrorMessageBlock"
                             Storyboard.TargetProperty="Opacity"
                             From="1" To="0" BeginTime="0:0:4" Duration="0:0:1"/>
        </Storyboard>
    
    
    <Style TargetType="ListBoxItem" x:Key="StretchListBoxItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>
    <Style TargetType="ListBoxItem" x:Key="CustomListBoxItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!-- No visual changes to ensure no hover effect -->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <!-- No visual changes to ensure no selection effect -->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="ItemContainerStyle" Value="{StaticResource StretchListBoxItemStyle}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Black" Opacity="0.6"/>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
        
    </Style>


    <Style TargetType="ListBoxItem" x:Key="StyledListBoxItem">
        <Setter Property="FontFamily" Value="pack://application:,,,/fonts/#Roboto"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                                Background="White" 
                                BorderBrush="Black" 
                                BorderThickness="1" 
                                CornerRadius="5" 
                                Padding="5" 
                                Margin="0,0,0,2">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for CheckBox with custom appearance -->
    <Style TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border Name="border" 
                                    Width="16" 
                                    Height="16" 
                                    Background="White" 
                                    BorderBrush="Gray" 
                                    BorderThickness="1" 
                                    CornerRadius="3">
                            <Path Name="checkMark" 
                                      Data="M0,6 L2,6 6,10 14,2 16,2 6,12 z" 
                                      Fill="Transparent" 
                                      Stroke="Black" 
                                      StrokeThickness="2" 
                                      Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>